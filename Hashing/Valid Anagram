// Valid Anagram
/*
a word or phrase spelled by rearranging the letters of another word or phrase with matching frequency of characters
*/

#include <iostream>
#include <unordered_map>
#include <string>

using namespace std;

bool areAnagrams(string s, string t) {
    
    if(s.size() != t.size()) {
        return false;
    }

    unordered_map<char, int> freq;

    for(int i=0; i<s.size(); i++) {

        if(freq.count(s[i])) {
            freq[s[i]]++;
        } else {
            freq[s[i]] = 1;
        }
    }
    for(int i=0; i<t.size(); i++) {
        if(freq.count(t[i])) {
            freq[t[i]]--;
            if(freq[t[i]] == 0) {
                freq.erase(t[i]);
            }
        } else {
            return false;
        }
    }
    return freq.size() == 0;
}

int main() {
    string s ="omkar";
    string t ="rakmo";

    if (areAnagrams(s, t)) {
        cout << "The strings are anagrams." << endl;
    } else {
        cout << "The strings are not anagrams." << endl;
    }

    return 0;
}
