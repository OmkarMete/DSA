// Connect N Ropes
/*
If cost to connect 2 ropes = sum of their lengths Find min cost to connect N ropes.
rope Lengths = (4, 3, 2, 6)
*/

#include <iostream>
#include <queue>
#include <vector>

using namespace std;

int connectNropes(vector<int> ropes) {
    priority_queue<int,vector<int>,greater<int>> pq(ropes.begin(),ropes.end());

    int cost = 0;
    while(pq.size() > 1) {
        int min1 = pq.top();
        pq.pop();

        int min2 = pq.top();
        pq.pop();
        cost += min1 + min2;
        pq.push(min1 + min2);
    }

    return cost;
}
int main() {
    vector<int> ropes = {4, 3, 2, 6};
    int cost = connectNropes(ropes);
    cout << "Minimum cost to connect ropes : " << cost << endl;
    return 0;
}
