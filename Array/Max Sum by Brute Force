// For O(n^3) TC
#include<iostream>
using namespace std;

void maxSubArraySum1(int arr[],int n) {
    int maxsum = INT16_MIN;
    for(int start=0; start<n; start++) {
        for(int end=start; end<n; end++) {
            int currSum = 0;
            for(int i=start; i<=end; i++) {
                currSum += arr[i];
            }
            cout << currSum <<",";
            maxsum = max(maxsum, currSum);
        }
        cout << endl;
    }
    cout <<"Maximum Subarray Sum = " << maxsum << endl;
}
int main() {
    int arr[] = {-1,-2,-3,-4};
    int n = sizeof(arr) / sizeof(int);

    maxSubArraySum1(arr,n);
    return 0;
}

***********************************************************************************************************************
// For O(n^2) TC

#include<iostream>
using namespace std;

void maxSubArraySum2(int arr[],int n) {
    int maxsum = INT16_MIN;
    for(int start=0; start<n; start++) {
        int currSum = 0;
        for(int end=start; end<n; end++) {
            currSum += arr[end];
            maxsum = max(maxsum, currSum);
        }
    }
    cout <<"Maximum Subarray Sum = " << maxsum << endl;
}
int main() {
    int arr[] = {2,-3,6,-5,4,2};
    int n = sizeof(arr) / sizeof(int);

    maxSubArraySum2(arr,n);
    return 0;
}
