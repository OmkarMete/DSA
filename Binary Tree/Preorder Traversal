// Preorder Traversal

#include <iostream>
#include <vector>
using namespace std;

class node {
public:
    int data;
    node* left;
    node* right;

    node(int data) {
        this->data = data;
        left = right = NULL;
    }
};
static int idx = -1;

node* buildTree(vector<int> &nodes) {
    idx++;
    if(nodes[idx] == -1){
        return NULL;
    }
    node* currNode = new node (nodes[idx]);
    currNode-> left = buildTree(nodes); //// Left Sub Tree
    currNode-> right = buildTree(nodes); //// Right Sub Tree

    return currNode;
}

void preorder(node* root) {
    if(root == NULL){
        return;
    }
    cout << root->data <<" ";
    preorder(root->left);
    preorder(root->right);
}

int main() {
    vector<int> nodes = {1,2,4,-1,-1,5,-1,-1,3,-1,6,-1,-1};

    node* root = buildTree(nodes);

    preorder(root);
    return 0;
}
